name: Deploy to Staging Environment

on:
  push:
    branches: [staging]

jobs:
  build_docker_image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    outputs:
      image_tag: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: edit .env file
        env:
          PORT: ${{ secrets.PORT }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          HOST: ${{ secrets.HOST }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
          KAFKA_BROKER: ${{ secrets.KAFKA_BROKER }}
          KAFKA_CLIENT_ID: ${{ secrets.KAFKA_CLIENT_ID }}
          KAFKA_TOPIC_USER_CREATE: ${{ secrets.KAFKA_TOPIC_USER_CREATE }}
          KAFKA_TOPIC_DELETE: ${{ secrets.KAFKA_TOPIC_DELETE }}
          KAFKA_TOPIC_PASS_RESET: ${{ secrets.KAFKA_TOPIC_PASS_RESET }}
        run: |
          echo "PORT=${PORT}" > .env
          echo "HOST=${HOST}" >> .env
          echo "MONGODB_URI=${MONGODB_URI}" >> .env
          echo "REDIS_URL=${REDIS_URL}" >> .env
          echo "ENCRYPTION_KEY=${ENCRYPTION_KEY}" >> .env
          echo "ENCRYPTION_IV=${ENCRYPTION_IV}" >> .env
          echo "KAFKA_BROKER=${KAFKA_BROKER}" >> .env
          echo "KAFKA_CLIENT_ID=${KAFKA_CLIENT_ID}" >> .env
          echo "KAFKA_TOPIC_USER_CREATE=${KAFKA_TOPIC_USER_CREATE}" >> .env
          echo "KAFKA_TOPIC_DELETE=${KAFKA_TOPIC_DELETE}" >> .env
          echo "KAFKA_TOPIC_PASS_RESET=${KAFKA_TOPIC_PASS_RESET}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub pass-reset
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: byvoxel/auth-pass-reset
          tags: |
            type=raw,value=staging
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: byvoxel/auth-pass-reset:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_to_ec2:
    name: Deploy to EC2 Instances
    runs-on: ubuntu-latest
    needs: build_docker_image
    strategy:
      matrix:
        ec2_instance: 
          - ec2-3-233-114-192.compute-1.amazonaws.com

    steps:
      - name: Deploy Container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ matrix.ec2_instance }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: "120s"
          script: |
            set -e
            echo "Deploying image: byvoxel/auth-pass-reset:staging"
            sudo docker stop auth-pass-reset || true
            sudo docker rm auth-pass-reset || true
            sudo docker pull byvoxel/auth-pass-reset:staging
            sudo docker run -d \
              --name auth-pass-reset \
              -p 3013:3013 \
              --restart unless-stopped \
              byvoxel/auth-pass-reset:staging
            sudo docker system prune -af --volumes || true